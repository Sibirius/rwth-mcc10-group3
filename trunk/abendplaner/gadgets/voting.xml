<?xml version="1.0" encoding="UTF-8" ?> 
<Module>
<ModulePrefs title="Abendplaner Voting"
			 height="300">
  <Require feature="wave" /> 
  <Require feature="dynamic-height"/>  
</ModulePrefs>
<Content type="html">
<![CDATA[
	<head>
	<style>
	fieldset {
		width: 200px;
		float: left;
	}
	</style>
	</head>
	<body>	
	<script>
		//initialise global vars	
		var activities = ["","","",""]; //selected activities
		var active = ["eat","dance","drink","cinema"];
		var voted = false;
		  			
		function stateUpdated() {
			if(!voted){
	  			//selected activities represented within one integer value
	  			//like unix-file-permissions
	  			//eat    <-> 2^3
	  			//dance  <-> 2^2
	  			//drink  <-> 2^1
	  			//cinema <-> 2^0	
	  			activities = ["","","",""];	
				var value = parseInt(wave.getState().get('value', '0'));
				for(var i = 0; i < 4; i++){
					if( Math.floor(value / Math.pow(2,3-i)) == 1 ){
						activities[i] = active[i];
					}
					value = value % Math.pow(2,3-i);
				}		
			    var params = {};  
			    params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.DOM;  
			    var url = "http://rwth-mcc10-group3.googlecode.com/svn/trunk/abendplaner/war/WEB-INF/locationdb.xml";  
			    gadgets.io.makeRequest(url, response, params);
		    }
		}
		
		function response(obj){
		    var domdata = obj.data;
		    var count = 0;
			for(var i=0; i<activities.length; i++){
				if(activities[i]!=""){
					var f = document.createElement("fieldset");
					f.setAttribute("id",activities[i]);
					var l = document.createElement("legend");
					l.appendChild( document.createTextNode(activities[i]) );
					f.appendChild(l);
					var x=domdata.getElementsByTagName(activities[i])[0].getElementsByTagName("location");			        
			        for (j=0;j<x.length;j++){	
						f.appendChild( createVoteElement( x[j].getElementsByTagName("name")[0].childNodes[0].nodeValue, count) );
						count++;
					}
					insertNewChoice(f);		    
				} else {
					count += domdata.getElementsByTagName(active[i])[0].getElementsByTagName("location").length;				
				}

	    	}
			gadgets.window.adjustHeight();	    			
		}
		
		// creates element with label and yes/no choice
		function createVoteElement(text, number) {
			var p = document.createElement("p");
		
			var select = document.createElement("select");
			select.setAttribute("id","select"+number);
	
			var ja = document.createElement("option");
			ja.appendChild(document.createTextNode("yes"));
			ja.setAttribute("value","1");
			var nein = document.createElement("option");
			nein.appendChild(document.createTextNode("nein"));
			nein.setAttribute("value","0");

			select.appendChild(ja);
			select.appendChild(nein);			

			p.appendChild(document.createTextNode(text));
			p.appendChild(select);

			return p;
		}
				
		// inserts before button after all the other choices
		function insertNewChoice(choice) {
			var vc = document.getElementById("voting_container");
			var vb = document.getElementById("voting_separator");

			vc.insertBefore(choice, vb); 
			 
		}
		
		function vote(){
			var viewerId = wave.getViewer().getId();		
			var state = wave.getState();
			var selection = "";
			for(i=0; i<4; i++){
				if(activities[i]!=""){
					var x = document.getElementById(activities[i]).getElementsByTagName("select");
					for(j=0;j<x.length;j++){
						selection += x[j].options[x[j].selectedIndex].getAttribute("value");
					}
				} else {
					selection += "0000";
				}
				if(i!=3) selection += "#";
			}
			delta = {};
		    delta[viewerId] = selection;
		    voted = true;
		    state.submitDelta(delta);			
			document.getElementById("voting_btn").disabled = true;
			var p = document.createElement("p");
			p.appendChild( document.createTextNode("Vote saved!") );
			insertNewChoice(p);
			gadgets.window.adjustHeight();			
		}
		
	    function init() {
	      if (wave && wave.isInWaveContainer()) {
	        wave.setStateCallback(stateUpdated);
	      }
	    }
	    
	    gadgets.util.registerOnLoadHandler(init);	
	</script>
	<form action="javascript:return;" id="voting_container">
		<hr id="voting_separator" style="clear: left;" />
		<input id="voting_btn" type="button" value="Save!" onclick="vote()"/>
	</form>
  ]]> 
  </Content>
</Module>